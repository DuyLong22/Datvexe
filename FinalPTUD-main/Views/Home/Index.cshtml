@model IEnumerable<BusTicketBooking.Models.Trip>
@{
    ViewData["Title"] = "Trang chủ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .search-box {
        display: flex;
        align-items: stretch;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
        max-width: 1300px;
        height: 100px;
        margin: auto;
        position: relative;
    }

    .search-item {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 12px 16px;
        font-size: 14px;
        flex: 1;
        border-right: 1px solid #eee;
        position: relative;
    }

    .search-item i {
        font-size: 20px;
    }

     .search-item:last-of-type {
        border-right: none;
    }

     .search-item label {
        font-size: 14px;
        color: #000;
        display: block;
        margin-bottom: 15px;
        }

     .search-item .value {
        font-weight: bold;
        font-size: 14px;
        color: #000;
    }

    .search-item input[type="text"] {
        border: none;
        outline: none;
        font-weight: bold;
        font-size: 18px;
        color: #000;
    }

    .search-item input[type="date"] {
        border: none;
        outline: none;
        font-weight: bold;
        font-size: 18px;
        color: #000;
    }

     .add-return {
        cursor: pointer;
        font-weight: 500;
        font-size: 14px;
    }

    .swap-icon {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: -18px;
        background: #fff;
        border-radius: 50%;
        border: 1px solid #ddd;
        width: 45px;
        height: 45px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        z-index: 2;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

     .swap-icon i {
        font-size: 20px;
        color: #444;
    }

    .to-box {
        padding-left: 40px;
    }

    .search-btn {
        background: #1e3c72;
        color: #fff;
        border: none;
        padding: 0 24px;
        font-size: 15px;
        font-weight: bold;
        cursor: pointer;
        border-radius: 0 12px 12px 0;
        transition: background 0.2s;
        flex-shrink: 0;
    }

        .search-btn:hover {
            background: #1e3c72;
        }

       
    /* Ẩn calendar icon trong input date */
    input[type="date"]::-webkit-calendar-picker-indicator {
        opacity: 0;
        display: none;
        -webkit-appearance: none;
        appearance: none;
    }

    /* ===============================
       STYLE DROPDOWN TỈNH THÀNH
       =============================== */

    /* Container của dropdown */
    .city-dropdown {
        position: absolute;
        top: 100%;
        left: 0;
        width: 360px;
        max-height: 420px;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0,0,0,0.15);
        overflow-y: auto;
        display: none; /* Mặc định ẩn */
        z-index: 1000;
        padding: 12px;
        font-family: "Segoe UI", sans-serif;
        animation: fadeIn 0.2s ease-in-out;
    }


    /* Từng phần trong dropdown */
    .dropdown-section {
        margin-bottom: 12px;
    }

    /* Tiêu đề phần */
    .dropdown-title {
        font-size: 16px;
        font-weight: 600;
        color: #000;
        margin-bottom: 8px;
        text-transform: uppercase;
    }

    /* Danh sách thành phố (chỉ hiển thị 5 tỉnh, có cuộn) */
    #cityList-from,
    #cityList-to {
        max-height: 200px; /* Khoảng 5 dòng */
        overflow-y: auto;
        padding-right: 6px; /* để thanh cuộn không che chữ */
    }

    /* Từng item trong danh sách */
    .city-item {
        padding: 8px 12px;
        cursor: pointer;
        transition: all 0.2s;
        font-size: 15px;
        font-weight: 600;
        color: #000000D9;
        border-bottom: 1px solid #ddd; /* Đường kẻ ngăn cách */
    }

        .city-item:hover {
            background: #f0f7ff;
            color: #007bff;
        }

    /* Vùng tìm kiếm gần đây */
    .recent-list {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
    }

    .recent-item {
        background: #f5f5f5;
        border-radius: 20px;
        padding: 6px 12px;
        font-size: 13px;
        cursor: pointer;
        transition: all 0.2s;
        color: #555;
    }

        .recent-item:hover {
            background: #007bff;
            color: #fff;
        }

    /* Thanh phân cách */
    .city-dropdown hr {
        border: none;
        border-top: 1px solid #eee;
        margin: 10px 0;
    }

    /* Tùy chỉnh thanh cuộn */
    #cityList-from::-webkit-scrollbar,
    #cityList-to::-webkit-scrollbar {
        width: 6px;
    }

    #cityList-from::-webkit-scrollbar-track,
    #cityList-to::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
    }

    #cityList-from::-webkit-scrollbar-thumb,
    #cityList-to::-webkit-scrollbar-thumb {
        background: #bbb;
        border-radius: 4px;
        transition: background 0.3s;
    }

        #cityList-from::-webkit-scrollbar-thumb:hover,
        #cityList-to::-webkit-scrollbar-thumb:hover {
            background: #888;
        }

    #returnWrapper {
        display: none !important;
    }

    .add-return {
        display: none !important;
    }
</style>

<!-- Banner Slider -->
@section Banner {
<div id="bannerCarousel" class="carousel slide carousel-fade w-100" data-bs-ride="carousel" data-bs-interval="3000" style="margin:0; padding:0;">
    <div class="carousel-indicators">
        <button type="button" data-bs-target="#bannerCarousel" data-bs-slide-to="0" class="active"></button>
        <button type="button" data-bs-target="#bannerCarousel" data-bs-slide-to="1"></button>
        <button type="button" data-bs-target="#bannerCarousel" data-bs-slide-to="2"></button>
    </div>
    <div class="carousel-inner" style="height:550px; overflow:hidden;">
        <div class="carousel-item active">
            <img src="/images/banner.jpg" class="d-block w-100" style="object-fit:contain;">
        </div>
        <div class="carousel-item">
            <img src="/images/banner2.png" class="d-block w-100" style="object-fit:contain;">
        </div>
        <div class="carousel-item">
            <img src="/images/banner3.jpg" class="d-block w-100" style="object-fit:contain;">
        </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#bannerCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon"></span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#bannerCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon"></span>
    </button>
</div>
}

<form asp-controller="Trips" asp-action="Index" asp-area="User" method="get" class="search-box mb-4">
    <!-- Từ -->
    <div class="search-item" id="fromBox">
        <i class="bi bi-bus-front"></i>
        <div>
            <label style="font-weight:bold">Điểm đến</label>
            <input type="text" id="from" name="from" placeholder="Nhập điểm đi" autocomplete="off" value="TP. Hồ Chí Minh" data-initial="TP. Hồ Chí Minh" />
        </div>

        <div id="fromDropdown" class="city-dropdown">
            <div class="dropdown-section">
                <div class="dropdown-title">TỈNH/THÀNH PHỐ</div>
                <div id="cityList-from"></div>
            </div>
            <hr>
            <div class="dropdown-section">
                <div class="dropdown-title">TÌM KIẾM GẦN ĐÂY</div>
                <div class="recent-list" id="recent-from"></div>
            </div>
        </div>

        <div class="swap-icon" onclick="swapLocations(this)">
            <i class="bi bi-arrow-left-right"></i>
        </div>
    </div>

    <!-- Đến -->
    <div class="search-item to-box">
        <i class="bi bi-bus-front"></i>
        <div>
            <label style="font-weight:bold">Điểm đi</label>
            <input type="text" id="to" name="to" placeholder="Nhập điểm đến" autocomplete="off" value="Cần Thơ" data-initial="Cần Thơ" />
        </div>

        <div id="toDropdown" class="city-dropdown">
            <div class="dropdown-section">
                <div class="dropdown-title">TỈNH/THÀNH PHỐ</div>
                <div id="cityList-to"></div>
            </div>
            <hr>
            <div class="dropdown-section">
                <div class="dropdown-title">TÌM KIẾM GẦN ĐÂY</div>
                <div class="recent-list" id="recent-to"></div>
            </div>
        </div>
    </div>

    <!-- Ngày đi -->
    <div class="search-item">
        <i class="bi bi-calendar-event"></i>
        <div>
            <label style="font-weight:bold">Ngày đi </label>
            <input type="text" id="ngaydi" name="date" placeholder="Chọn ngày đi" value="@DateTime.Now.ToString("dd/MM/yyyy")" />
        </div>
    </div>

    <!-- Ngày về -->
    <div class="search-item" id="returnWrapper" style="display:none;">
        <i class="bi bi-calendar-event"></i>
        <div>
            <label style="font-weight:bold">Ngày về</label>
            <input type="text" id="ngayve" name="returnDate" placeholder="Chọn ngày về" />
        </div>
    </div>

    <div class="search-item add-return" onclick="addReturnDate()">
        <i class="bi bi-plus-lg" style="color: #0d6efd;"></i>
        <span>Thêm ngày về</span>
    </div>

    <button type="submit" class="search-btn">TÌM KIẾM XE KHÁCH</button>
</form>

<script>
    // Swap
    function swapLocations(btn) {
        let fromInput = document.getElementById("from");
        let toInput = document.getElementById("to");
        let temp = fromInput.value;
        fromInput.value = toInput.value;
        toInput.value = temp;

        btn.classList.add("rotate");
        setTimeout(() => btn.classList.remove("rotate"), 500);
    }

    let isRoundTrip = false;

    function addReturnDate() {
        isRoundTrip = true;
        document.querySelector(".add-return").style.display = "none";
        document.getElementById("returnWrapper").style.display = "flex";
    }

    // Flatpickr
    flatpickr("#ngaydi", { dateFormat: "d/m/Y", minDate: "today", clickOpens: true });
    flatpickr("#ngayve", { dateFormat: "d/m/Y", minDate: "today", clickOpens: true });

    // Dropdown + reset input
    function loadCities(inputId, dropdownId) {
        const input = document.getElementById(inputId);
        const dropdown = document.getElementById(dropdownId);

        input.addEventListener("focus", () => {
            document.querySelectorAll(".city-dropdown").forEach(dd => dd.style.display = "none");

            fetch("/Cities/GetAllCities")
                .then(res => res.json())
                .then(data => {
                    let cityList = document.getElementById(`cityList-${inputId}`);
                    cityList.innerHTML = "";

                    data.forEach(city => {
                        let div = document.createElement("div");
                        div.textContent = city.cityName || city.CityName;
                        div.classList.add("city-item");
                        div.onclick = () => {
                            input.value = div.textContent;
                            input.dataset.selected = "true";
                            dropdown.style.display = "none";
                        };
                        cityList.appendChild(div);
                    });

                    renderRecent(inputId);
                    dropdown.style.display = "block";
                });
        });

        // Khi click ra ngoài, nếu không chọn gì => reset về giá trị ban đầu
        input.addEventListener("blur", () => {
            setTimeout(() => {
                if (!input.dataset.selected || input.value.trim() === "") {
                    input.value = input.getAttribute("data-initial");
                }
                input.dataset.selected = "false";
            }, 150);
        });
    }


    function saveRecent(inputId, city) {
        let key = `recent-${inputId}`;
        let recent = JSON.parse(localStorage.getItem(key)) || [];
        if (!recent.includes(city)) {
            recent.unshift(city);
            if (recent.length > 5) recent.pop();
            localStorage.setItem(key, JSON.stringify(recent));
        }
    }

    function renderRecent(inputId) {
        let key = `recent-${inputId}`;
        let recent = JSON.parse(localStorage.getItem(key)) || [];
        let container = document.getElementById(`recent-${inputId}`);
        container.innerHTML = "";
        recent.forEach(r => {
            let span = document.createElement("span");
            span.classList.add("recent-item");
            span.textContent = r;
            span.onclick = () => {
                document.getElementById(inputId).value = r;
                document.getElementById(inputId).dataset.selected = "true";
                document.getElementById(`${inputId}Dropdown`).style.display = "none";
            };
            container.appendChild(span);
        });
    }

    // Click ra ngoài đóng dropdown
    document.addEventListener("click", (e) => {
        if (!e.target.closest(".search-item")) {
            document.querySelectorAll(".city-dropdown").forEach(dd => dd.style.display = "none");
        }
    });

    loadCities("from", "fromDropdown");
    loadCities("to", "toDropdown");
</script>

<!-- Trip List -->
<h3 class="mb-4" style="padding: 40px 0 20px 0; font-size: 24px; color: #484848">Tuyến đường phổ biến</h3>   <!-- Thêm dòng tiêu đề -->

<style>
    /* Bỏ hiệu ứng hover của card */
    .card:hover {
        transform: none !important;
        box-shadow: none !important;
    }

    /* Bỏ hover trên ảnh */
    .card img:hover {
        filter: none !important;
        opacity: 1 !important;
    }
</style>

<div class="d-flex overflow-auto gap-3">
    @foreach (var t in Model.Take(3))
    {
        <div class="card" style="min-width: 300px;">
            <img class="card-img-top" src="@(string.IsNullOrEmpty(t.ImagePath) ? "/images/busvt.jpg" : t.ImagePath)" alt="bus" />
            <div class="card-body">
                <h5 class="card-title">@t.BusName</h5>
                <p class="card-text">
                    @t.Route!.DepartureCity!.CityName → @t.Route!.DestinationCity!.CityName <br />
                    Khởi hành: @t.DepartureTime.ToString("HH:mm dd/MM/yyyy")<br />
                    Đến nơi: @t.ArrivalTime.ToString("HH:mm dd/MM/yyyy")<br />
                    Giá: @t.Price.ToString("n0") đ
                </p>
                <a class="btn btn-success" href="/Tickets/Book/@t.TripId">Đặt vé</a>
            </div>
        </div>
    }
</div>


<!-- Khuyến mãi -->
<h3 class="mb-4" style="padding: 40px 0 20px 0; font-size: 24px; color: #484848">Khuyến mãi nổi bật</h3>   <!-- Thêm dòng tiêu đề -->

<div class="row g-3">
    <div class="col-md-4"><img src="/images/km1.jpg" class="img-fluid rounded shadow-sm promo-img" /></div>
    <div class="col-md-4"><img src="/images/km2.jpg" class="img-fluid rounded shadow-sm promo-img" /></div>
    <div class="col-md-4"><img src="/images/km3.png" class="img-fluid rounded shadow-sm promo-img" /></div>
</div>

